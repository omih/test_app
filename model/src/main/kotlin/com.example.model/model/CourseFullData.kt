package com.example.model.model

import org.joda.time.DateTime

data class CourseFullData(
        val id: Long,
        val summary: String,
        val workload: String,
        val intro: String,
        val courseFormat: String,
        val targetAudience: String,
        val isCertificateAutoIssued: Boolean,
        val certificateRegularThreshold: Int,
        val certificateDistinctionThreshold: Int,
        val instructors: List<Long>,
        val certificate: String,
        val requirements: String,
        val description: String,
        val sections: List<String>,
        val totalUnits: Int,
        val enrollment: String?,
        val isFavorite: Boolean,
        val progress: Int?,
        val firstLesson: String?,
        val firstUnit: String?,
        val certificateLink: String?,
        val certificateRegularLink: String?,
        val certificateDistinctionLink: String?,
        val scheduleLink: String?,
        val scheduleLongLink: String?,
        val firstDeadline: String?,
        val lastDeadline: String?,
        val subscriptions: List<String>?,
        val announcements: List<String>?,
        val isContest: Boolean,
        val isSelfPaced: Boolean,
        val isAdaptive: Boolean,
        val isIdeaCompatible: Boolean,
        val lastStep: String?,
        val introVideo: List<String>?,
        val socialProviders: List<String>,
        val authors: List<Long>,
        val tags: List<String>,
        val hasTutors: Boolean,
        val isPromoted: Boolean,
        val isEnabled: Boolean,
        val isProctored: Boolean,
        val proctorUrl: String?,
        val reviewSummary: Int?,
        val scheduleType: String?,
        val certificatesCount: Int,
        val learnersCount: Int,
        val timeToComplete: Long,
        val isPopular: Boolean,
        val similarCourses: List<Long>,
        val isUnsuitable: Boolean,
        val owner: Long,
        val language: String,
        val isFeatured: Boolean,
        val isPublic: Boolean,
        val title: String,
        val slug: String,
        val beginDate: DateTime?,
        val endDate: DateTime?,
        val softDeadline: DateTime?,
        val hardDeadline: DateTime?,
        val gradingPolicy: String,
        val beginDateSource: DateTime?,
        val endDateSource: DateTime,
        val softDeadlineSource: DateTime?,
        val hardDeadlineSource: DateTime?,
        val gradingPolicySource: String,
        val isActive: Boolean,
        val createDate: DateTime,
        val updateDate: DateTime?,
        val learnersGroup: String?,
        val testersGroup: String?,
        val moderatorsGroup: String?,
        val teachersGroup: String?,
        val adminsGroup: String?,
        val discussionsCount: Int,
        val discussionProxy: String?,
        val discussionThreads: String?,
        val ltiConsumerKey: String,
        val ltiSecretKey: String
)